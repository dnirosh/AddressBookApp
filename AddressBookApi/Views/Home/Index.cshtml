@section scripts{
     <style type="text/css">
        .list
        {
            font:10pt Tahoma; color:#000;
            background:#9bbb59;
        }
        .head{background:#9bbb59; }
        .row{background:#e6eed5; }
        .boldtext{font-weight:bold}
 
        .editing { display: none; }
        .hiden{display: none;}
        .editing_input {display: block;}
 
    </style>
    <link href="~/Content/jasmine.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.7.1.min.js"></script>
    <script src="~/Scripts/knockout-2.1.0.debug.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.debug.js"></script>
    <!-- include jasmine core files here... -->
    <script src="~/Scripts/jasmine.js"></script>
    <script src="~/Scripts/jasmine-html.js"></script>
    <!-- include test spec files here... -->

    <script type="text/javascript">
        var ko_view_model = null;

        $(function () {
            var API_URL = "http://localhost:41985/api/AddressBookApi/";
            var highestId = 1; //maintain a sequence for addressbook entries
            function AddressBookEntry(Id , Name, Address) {
                var self = this;
                self.Id = ko.observable(Id);
                self.Name = Name;
                self.Address = Address;
            }

            var AddressBookViewModel = function () {
                var self = this;
                self.Id = ko.observable();
                self.Name = ko.observable();
                self.Address = ko.observable();
                self.AddressBookEntriesArray = ko.observableArray();

                /*
                self.AddressBookEntries = [{ name: "Dileepa", address: "Negombo" }, { name: "Knockout", address: "Javascript" }];
                // Editable data

                self.AddressBookEntriesArray = ko.observableArray([
                    new AddressBookEntry("asdsd", "sdsd")
                ]); */

                //Load address book entries  

                getAddressBookData(self);
                
                /*
                self.addAddressBookEntry = function () {
                    self.AddressBookEntriesArray.push(new AddressBookEntry("newName", "newAddress"));
                }; */

                self.addAddressBookEntry = function () {
                    if (self.Name() == "" || self.Address() == "")
                        return false;
                    //alert('self.Name=' + self.Name());
                    var jsondata = new AddressBookEntry(++highestId, self.Name(), self.Address());
                    jsondata = ko.toJS(jsondata);
                    jsondata = JSON.stringify(jsondata);

                    $.ajax({
                        url: API_URL,
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        data: jsondata,
                        statusCode: {
                            200: function (data) {                                
                                self.AddressBookEntriesArray.push(new AddressBookEntry(data.Id,data.Name, data.Address));
                                self.Name("");
                                self.Address("");
                            }
                        }
                    });
                    /*self.AddressBookEntriesArray.push(new AddressBookEntry("newName", "newAddress"));*/
                };
            }

            function getAddressBookData(_this) {
                $.get(
                        API_URL,
                        function (data) {
                            var results = ko.observableArray();
                            ko.mapping.fromJS(data, {}, results);
                            for (var i = 0; i < results().length; i++) {
                                if (results()[i].Id() > highestId)
                                    highestId = results()[i].Id();
                                _this.AddressBookEntriesArray.push(new AddressBookEntry(results()[i].Id(), results()[i].Name(), results()[i].Address()));
                            };
                        },
                        'json'
                    )
            }

            // Activates knockout.js
            ko_view_model = new AddressBookViewModel();
            ko.applyBindings(ko_view_model);

        });

    </script>

    <script src="~/Content/scripts/specs/testInitialValuesSpec.js"></script>

    <script type="text/javascript">
        //kickoff jasmine test runner
        $(function () {
            
            var jasmineEnv = jasmine.getEnv();

            jasmineEnv.updateInterval = 1000;
            var htmlReporter = new jasmine.HtmlReporter();

            jasmineEnv.addReporter(htmlReporter);
            jasmineEnv.specFilter = function (spec) {
                return htmlReporter.specFilter(spec);
            };

            var currentWindowOnload = window.onload;

            window.onload = function () {
                if (currentWindowOnload) {
                    currentWindowOnload();
                }
                execJasmine();
            };

            function execJasmine() {
                jasmineEnv.execute();
            }
        });

    </script>
}

<header>
    <div class="content-wrapper">
        <div class="float-left">
            <p class="site-title">
                <a href="~/"> Address Book using Web Api and Knockout </a></p>
        </div>
    </div>
</header>
<div id="body">
    <p> Address Book Entries </p>
      <table id="addressBookTable" class="list" cellpadding="5" cellspacing="1">
        <thead>
            <tr class="head">
                <th>
                    Name
                </th>
                <th>
                    Address
                </th>
                <th>
 
                </th>
            </tr>
        </thead>
        <tbody id="addressBookBody" data-bind="foreach: AddressBookEntriesArray">
            <tr><td><input data-bind="value:Name ,attr:{ Id:'Name'+Id()}"/></td><td><input data-bind="value:Address,attr:{ Id:'Address'+Id()}"/></td></tr>
        </tbody>
        <tfoot>
            <form id="addressBookForm" data-bind="submit: addAddressBookEntry">
                <tr class="row"><td><input data-bind="value:Name ,attr:{ Id: 'Name'+Id()}" /></td><td><input data-bind="value:Address,attr:{ Id:'Address'+Id()}"/></td></tr>
            </form>
        </tfoot>
    </table>

    <div id="buttonPanel">
        <button id="AddEntry" data-bind="click : addAddressBookEntry" > Add Entry </button>
    </div>
</div>
